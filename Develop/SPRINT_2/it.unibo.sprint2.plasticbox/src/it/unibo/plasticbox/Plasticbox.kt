/* Generated by AN DISI Unibo */ 
package it.unibo.plasticbox

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Plasticbox ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("plasticBox started: initializing resource value...")
						kotlincode.coapSupport.init( "coap://localhost:5683"  )
						kotlincode.coapSupport.updateResource(myself ,"wroom/detectorBox", "NPB=10" )
						println("Resource correctly initialized")
					}
					 transition( edgeName="goto",targetState="work", cond=doswitch() )
				}	 
				state("work") { //this:State
					action { //it:State
					}
					 transition(edgeName="t00",targetState="doCollect",cond=whenDispatch("collect"))
				}	 
				state("doCollect") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("collect(X)"), Term.createTerm("collect(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								var Bottles = payloadArg(0)
								kotlincode.coapSupport.updateResource(myself ,"wroom/plasticBox", "$Bottles" )
						}
					}
					 transition( edgeName="goto",targetState="work", cond=doswitch() )
				}	 
			}
		}
}
