/* Generated by AN DISI Unibo */ 
package it.unibo.alarmagent

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Alarmagent ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("alarm agent START")
					}
					 transition(edgeName="t00",targetState="sendTheRightAlarm",cond=whenDispatch("alarm"))
				}	 
				state("sendTheRightAlarm") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("alarm(X)"), Term.createTerm("alarm(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								var Alarm = payloadArg(0)
								if(Alarm == "TVOC-HIGH"){ forward("suspend", "suspend($Alarm)" ,"detector" ) 
								kotlincode.coapSupport.setWroomAlarm(  )
								 }
						}
					}
				}	 
			}
		}
}
